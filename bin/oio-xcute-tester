#!/usr/bin/env python

import argparse
import signal
import sys

from oio.cli import make_logger_args_parser, get_logger_from_args
from oio.xcute.common.manager import XcuteManager
from oio.xcute.tester import TesterJob


def make_arg_parser():
    log_parser = make_logger_args_parser()
    descr = """
    Xcute tester
    """
    parser = argparse.ArgumentParser(description=descr, parents=[log_parser])

    parser.add_argument('namespace', help="Namespace")
    parser.add_argument('--lock', help='Name of the lock')
    parser.add_argument('--error-percentage', help='Error percentage')

    return parser


if __name__ == '__main__':
    args = make_arg_parser().parse_args()
    logger = get_logger_from_args(args)
    job_info = {
        'job': {
            'type': TesterJob.JOB_TYPE
        },
        'config': {
            'job_lock': args.lock,
            'error_percentage': args.error_percentage
        }
    }

    manager = XcuteManager(logger=logger)
    job = manager.create_job(job_info)

    def exit_gracefully(signum, frame):
        job.exit_gracefully()

    signal.signal(signal.SIGINT, exit_gracefully)
    signal.signal(signal.SIGTERM, exit_gracefully)

    job.run()
    if not job.success:
        sys.exit(1)
